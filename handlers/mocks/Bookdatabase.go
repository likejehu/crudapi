// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	models "github.com/likejehu/crudapi/models"
	mock "github.com/stretchr/testify/mock"
)

// Bookdatabase is an autogenerated mock type for the Bookdatabase type
type Bookdatabase struct {
	mock.Mock
}

// Delete provides a mock function with given fields: key
func (_m *Bookdatabase) Delete(key string) {
	_m.Called(key)
}

// Get provides a mock function with given fields: key
func (_m *Bookdatabase) Get(key string) *models.Book {
	ret := _m.Called(key)

	var r0 *models.Book
	if rf, ok := ret.Get(0).(func(string) *models.Book); ok {
		r0 = rf(key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Book)
		}
	}

	return r0
}

// GetAll provides a mock function with given fields:
func (_m *Bookdatabase) GetAll() map[string]*models.Book {
	ret := _m.Called()

	var r0 map[string]*models.Book
	if rf, ok := ret.Get(0).(func() map[string]*models.Book); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]*models.Book)
		}
	}

	return r0
}

// Post provides a mock function with given fields: key, book
func (_m *Bookdatabase) Post(key string, book *models.Book) models.Book {
	ret := _m.Called(key, book)

	var r0 models.Book
	if rf, ok := ret.Get(0).(func(string, *models.Book) models.Book); ok {
		r0 = rf(key, book)
	} else {
		r0 = ret.Get(0).(models.Book)
	}

	return r0
}

// Update provides a mock function with given fields: key, book
func (_m *Bookdatabase) Update(key string, book *models.Book) *models.Book {
	ret := _m.Called(key, book)

	var r0 *models.Book
	if rf, ok := ret.Get(0).(func(string, *models.Book) *models.Book); ok {
		r0 = rf(key, book)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Book)
		}
	}

	return r0
}
